{"version":3,"file":"static/js/841.2c814e02.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.tsx","webpack://project/./src/components/AuthForm/styles.module.scss?ee32","components/Auth/Auth.tsx","webpack://project/./src/components/Auth/styles.module.scss?35eb"],"sourcesContent":["import { FC, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport cn from 'classnames/bind';\n\nimport { fetchAuth } from '../../store/API/auth';\nimport { clearAuthError } from '../../store/auth/slice';\n\nimport Button from '../../ui/Button';\nimport Input from '../../ui/Input';\nimport Preloader from '../../ui/Preloader';\n\nimport { authSheme } from '../../utils/yupSchemes';\n\nimport { useShowError } from '../../hooks/useErrorContext';\nimport { useAppDispatch, useAppSelector } from '../../hooks/useRedux';\n\nimport { BtnVariants } from '../../variants';\n\nimport styles from './styles.module.scss';\n\nconst cx = cn.bind(styles);\n\ntype AuthFormProps = {\n  signUp: boolean;\n  goTo: (type: string) => void;\n  handleShowAuth: (type?: string | boolean) => void;\n};\n\ntype SubmitForm = {\n  email: string | undefined;\n  password: string | undefined;\n};\n\nconst AuthForm: FC<AuthFormProps> = ({ signUp, goTo, handleShowAuth }) => {\n  const dispatch = useAppDispatch();\n  const { error, isLoading } = useAppSelector(({ auth }) => auth);\n\n  useShowError(error, clearAuthError);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isLoading: isAuthorizing },\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n    resolver: yupResolver(authSheme),\n  });\n\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  const handleClickAuth = (data: SubmitForm) => {\n    if (!data.password || !data.email) return;\n    const { password, email } = data;\n    dispatch(\n      fetchAuth({\n        type: signUp ? 'register' : 'login',\n        auth: {\n          fingerprint: 'string',\n          username: email,\n          password,\n        },\n      }),\n    ).then(({ payload }) => {\n      if (!payload) return;\n      if (typeof payload !== 'object') return;\n      if ('accessToken' in payload && 'refreshToken' in payload) {\n        handleShowAuth();\n      }\n    });\n  };\n\n  return (\n    <>\n      {isLoading && <Preloader />}\n      <form\n        className={cx('validationForm')}\n        onSubmit={handleSubmit(handleClickAuth)}\n      >\n        <Input\n          control={control}\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          isError={!!errors.email?.message}\n          errorMessage={errors.email?.message}\n        />\n        <Input\n          name=\"password\"\n          control={control}\n          id={'passwordInput'}\n          type={!isShowPassword ? 'password' : 'text'}\n          handleChangeShowPassword={() => setIsShowPassword(!isShowPassword)}\n          label=\"Password\"\n          isError={!!errors.password?.message}\n          errorMessage={errors.password?.message}\n        />\n        <Button\n          variant={BtnVariants.DEFAULT}\n          type={'submit'}\n          disabled={isAuthorizing}\n        >\n          {signUp ? 'sign up' : 'log in'}\n        </Button>\n        <p className={cx('link', 'linkMobile')}>\n          {signUp\n            ? 'If you already have an account, please '\n            : 'If you don\"t have an account yet, please '}\n          <button\n            className={cx('goTo')}\n            onClick={() => goTo(signUp ? 'login' : 'signUp')}\n          >\n            log in\n          </button>\n        </p>\n      </form>\n    </>\n  );\n};\n\nexport default AuthForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"validationForm\":\"styles_validationForm__iQiBV\",\"link\":\"styles_link__jMqyN\",\"linkMobile\":\"styles_linkMobile__8A7nR\",\"goTo\":\"styles_goTo__bPcVM\"};","import React, { FC, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport cn from 'classnames/bind';\n\nimport AuthForm from '../AuthForm/AuthForm';\n\nimport { usePressEscape } from '../../hooks/usePressEscape';\nimport { useThemeContext } from '../../hooks/useThemeContext';\n\nimport { modalNode } from '../../constants';\n\nimport { ReactComponent as CloseIcon } from '../../assets/images/closeIcon.svg';\nimport logInImg from '../../assets/images/logInImg.jpg';\nimport signUpImg from '../../assets/images/signUpImg.jpg';\n\nimport styles from './styles.module.scss';\n\nconst cx = cn.bind(styles);\n\nexport type AuthProps = {\n  isShowAuth: {\n    logIn: boolean;\n    signUp: boolean;\n  };\n  handleShowAuth: (type?: string | boolean) => void;\n};\n\nconst Auth: FC<AuthProps> = ({ isShowAuth, handleShowAuth }) => {\n  const { theme } = useThemeContext();\n  const { logIn, signUp } = isShowAuth;\n\n  const goTo = (type: string) => {\n    handleShowAuth(type);\n  };\n  useEffect(() => {\n    usePressEscape(handleShowAuth, logIn || signUp);\n  }, [isShowAuth]);\n\n  return createPortal(\n    <>\n      {(logIn || signUp) && (\n        <>\n          <section className={cx('auth')} onClick={() => handleShowAuth(false)}>\n            <div\n              className={cx('authContent')}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <img\n                src={signUp ? signUpImg : logInImg}\n                alt=\"authBackground\"\n                className={cx('signUpBackgroundImg')}\n              />\n              <div className={cx('validationWrapp')}>\n                <h2 className={cx('validationHeading')}>\n                  {signUp ? 'Create your profile' : 'Welcome Back'}\n                </h2>\n                <p className={cx('link')}>\n                  {signUp\n                    ? 'If you already have an account, please '\n                    : 'If you don\"t have an account yet, please '}\n                  <a\n                    className={cx('goTo')}\n                    onClick={() => goTo(signUp ? 'login' : 'signUp')}\n                  >\n                    {signUp ? 'log in' : 'sign up'}\n                  </a>\n                </p>\n                <AuthForm\n                  signUp={signUp}\n                  goTo={() => goTo(signUp ? 'login' : 'signUp')}\n                  handleShowAuth={handleShowAuth}\n                />\n                <CloseIcon\n                  onClick={() => handleShowAuth(false)}\n                  fill={theme === 'dark' ? '#575757' : '#9C9C9C'}\n                  className={cx('closeIcon')}\n                />\n              </div>\n            </div>\n          </section>\n        </>\n      )}\n    </>,\n    modalNode,\n  );\n};\n\nexport default Auth;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"styles_auth__WeaFG\",\"authContent\":\"styles_authContent__QucYS\",\"signUpBackgroundImg\":\"styles_signUpBackgroundImg__H4LQc\",\"validationWrapp\":\"styles_validationWrapp__ouFuj\",\"validationHeading\":\"styles_validationHeading__2iUD8\",\"link\":\"styles_link__gRdnQ\",\"linkMobile\":\"styles_linkMobile__lasXD\",\"goTo\":\"styles_goTo__StDmY\",\"closeIcon\":\"styles_closeIcon__GdLHa\"};"],"names":["cx","cn","signUp","goTo","handleShowAuth","dispatch","useAppDispatch","useAppSelector","auth","error","isLoading","useShowError","clearAuthError","useForm","defaultValues","email","password","resolver","yupResolver","authSheme","control","handleSubmit","formState","errors","isAuthorizing","useState","isShowPassword","setIsShowPassword","Preloader","className","onSubmit","data","fetchAuth","type","fingerprint","username","then","payload","Input","name","label","isError","message","errorMessage","id","handleChangeShowPassword","Button","variant","BtnVariants","disabled","onClick","isShowAuth","theme","useThemeContext","logIn","useEffect","usePressEscape","createPortal","e","stopPropagation","src","signUpImg","logInImg","alt","fill","modalNode"],"sourceRoot":""}